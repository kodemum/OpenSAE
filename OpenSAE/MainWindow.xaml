<Window x:Class="OpenSAE.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:models="clr-namespace:OpenSAE.Models"
        xmlns:views="clr-namespace:OpenSAE.Views"
        xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker"
        xmlns:controls="clr-namespace:OpenSAE.Controls"
        xmlns:behaviors="clr-namespace:OpenSAE.Behaviors"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:OpenSAE"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=models:AppModel}"
        Closing="Window_Closing"
        Title="{Binding AppTitle}"
        ResizeMode="CanResizeWithGrip"
        MinHeight="500"
        Height="500"
        MinWidth="900"
        Width="1200"
        DragOver="mainWindow_DragOver"
        AllowDrop="True"
        Drop="mainWindow_Drop"
        x:Name="mainWindow">
    <Window.Resources>
        <DiffuseMaterial x:Key="borderMaterial">
            <DiffuseMaterial.Brush>
                <SolidColorBrush Color="Black" />
            </DiffuseMaterial.Brush>
        </DiffuseMaterial>

        <DataTemplate DataType="{x:Type models:SymbolArtModel}">
            <StackPanel>
                <UniformGrid Columns="2" Margin="10 5">
                    <TextBlock Text="Symbol Art name" HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Margin="5" />
                    <TextBlock Text="Size" HorizontalAlignment="Right" Margin="5 0" VerticalAlignment="Center" />
                    <ComboBox ItemsSource="{Binding SizeOptions}" Margin="5" DisplayMemberPath="Text" SelectedValuePath="Value" SelectedValue="{Binding Size}" />
                    <TextBlock Text="Sound effect" HorizontalAlignment="Right" Margin="5 0" VerticalAlignment="Center" />
                    <ComboBox ItemsSource="{Binding SoundEffectOptions}" Margin="5" DisplayMemberPath="Text" SelectedValuePath="Value" SelectedValue="{Binding SoundEffect}" />
                    <TextBlock Text="Author ID" HorizontalAlignment="Right" Margin="5 0" VerticalAlignment="Center" />
                    <TextBox Text="{Binding AuthorId}" Margin="5" />
                </UniformGrid>
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type models:SymbolArtGroupModel}">
            <StackPanel>
                <UniformGrid Columns="2" Margin="10 5">
                    <TextBlock Text="Group name" HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Margin="5" />
                    <TextBlock Text="" HorizontalAlignment="Right" Margin="5 0" VerticalAlignment="Center" />
                    <CheckBox Margin="5" Content="Enable" IsChecked="{Binding Visible}" />
                    <TextBlock Text="Color (all symbols)" HorizontalAlignment="Right" Margin="5 0" VerticalAlignment="Center" />
                    <colorpicker:PortableColorPicker Height="20">
                        <colorpicker:PortableColorPicker.Style>
                            <Style TargetType="{x:Type colorpicker:PortableColorPicker}">
                                <Setter Property="SelectedColor" Value="{Binding Color, Mode=TwoWay}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=mainWindow, Path=DataContext.ApplyToneCurve}" Value="True">
                                        <Setter Property="SelectedColor" Value="{Binding Color, Mode=TwoWay, Converter={StaticResource colorConversionConverter}}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </colorpicker:PortableColorPicker.Style>
                    </colorpicker:PortableColorPicker>
                    <TextBlock Text="Text to symbols" HorizontalAlignment="Right" Margin="5 0" VerticalAlignment="Center" />
                    <TextBox Text="{Binding PendingSymbolText, UpdateSourceTrigger=PropertyChanged}" Margin="5 5 5 0" />
                </UniformGrid>
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type models:SymbolArtLayerModel}">
            <StackPanel>
                <UniformGrid Columns="2" Margin="10 5">
                    <TextBlock Text="Symbol name" HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Margin="5" />
                    <TextBlock Text="" HorizontalAlignment="Right" Margin="5 0" VerticalAlignment="Center" />
                    <CheckBox Margin="5" Content="Enable" IsChecked="{Binding Visible}" />
                </UniformGrid>
                <!--<views:LayerVertexEditor />-->
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type models:SymbolArtImageLayerModel}">
            <StackPanel>
                <UniformGrid Columns="2" Margin="10 5">
                    <TextBlock Text="Overlay image name" HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBox Text="{Binding Name}" Margin="5" />
                    <TextBlock Text="" HorizontalAlignment="Right" Margin="5 0" VerticalAlignment="Center" />
                    <CheckBox Margin="5" Content="Enable" IsChecked="{Binding Visible}" />
                </UniformGrid>
                <Image Source="{Binding Image}" />
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding OpenFileCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding NewFileCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveCommand}" />
        <KeyBinding Modifiers="Ctrl+Alt" Key="S" Command="{Binding SaveAsCommand}" />
        <KeyBinding Modifiers="Ctrl+Alt+Shift" Key="S" Command="{Binding CurrentItemCommand}" CommandParameter="export" />

        <KeyBinding Modifiers="Ctrl" Key="C" Command="{Binding ClipboardCommand}" CommandParameter="copy" />
        <KeyBinding Modifiers="Ctrl" Key="V" Command="{Binding ClipboardCommand}" CommandParameter="paste" />

        <KeyBinding Modifiers="Ctrl" Key="OemComma" Command="{Binding CurrentItemCommand}" CommandParameter="toggleVisibility" />
        <KeyBinding Modifiers="Ctrl" Key="D" Command="{Binding CurrentItemCommand}" CommandParameter="deselect" />
        <KeyBinding Modifiers="Shift" Key="Delete" Command="{Binding CurrentItemCommand}" CommandParameter="delete" />
        <KeyBinding Modifiers="Ctrl+Shift" Key="D" Command="{Binding CurrentItemCommand}" CommandParameter="duplicate" />
        <KeyBinding Modifiers="Ctrl+Shift" Key="E" Command="{Binding CurrentItemCommand}" CommandParameter="addGroup" />
        <KeyBinding Modifiers="Ctrl" Key="E" Command="{Binding CurrentItemCommand}" CommandParameter="addLayer" />
        <KeyBinding Modifiers="Ctrl+Shift" Key="F" Command="{Binding CurrentItemCommand}" CommandParameter="flipY" />
        <KeyBinding Modifiers="Ctrl" Key="F" Command="{Binding CurrentItemCommand}" CommandParameter="flipX" />
        <KeyBinding Modifiers="Alt" Key="Up" Command="{Binding CurrentItemCommand}" CommandParameter="moveUp" />
        <KeyBinding Modifiers="Alt" Key="Down" Command="{Binding CurrentItemCommand}" CommandParameter="moveDown" />
        <KeyBinding Modifiers="Ctrl" Key="Space" Command="{Binding CurrentItemCommand}" CommandParameter="toggleImageOverlays" />

        <KeyBinding Modifiers="Ctrl" Key="R" Command="{Binding RotateCurrentItemCommand}" CommandParameter="90" />
        <KeyBinding Modifiers="Ctrl+Shift" Key="R" Command="{Binding RotateCurrentItemCommand}" CommandParameter="-90" />

        <KeyBinding Modifiers="Ctrl+Shift" Key="T" Command="{Binding ChangeSettingCommand}" CommandParameter="toneCurve" />
        <KeyBinding Modifiers="Ctrl+Shift" Key="G" Command="{Binding ChangeSettingCommand}" CommandParameter="guideLines" />

        <KeyBinding Modifiers="Ctrl" Key="OemPlus" Command="{Binding ZoomCommand}" CommandParameter="in" />
        <KeyBinding Modifiers="Ctrl" Key="OemMinus" Command="{Binding ZoomCommand}" CommandParameter="out" />

        <KeyBinding Modifiers="Ctrl" Key="Z" Command="{Binding Undo.UndoCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="Y" Command="{Binding Undo.RedoCommand}" />

        <KeyBinding Key="F1" Command="{Binding HelpCommand}" />
        <KeyBinding Key="F3" Command="{Binding Undo.UndoCommand}" />
        <KeyBinding Key="F4" Command="{Binding Undo.RedoCommand}" />
        <KeyBinding Key="F10">
            <KeyBinding.Command>
                <local:SimpleCommand Executed="ToggleExampleWindow_Executed" />
            </KeyBinding.Command>
        </KeyBinding>
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="250" />
        </Grid.ColumnDefinitions>

        <!-- Main menu -->
        <Menu DockPanel.Dock="Top" Grid.ColumnSpan="5" Padding="5">
            <MenuItem Header="_File">
                <MenuItem Header="_New" Command="{Binding NewFileCommand}" InputGestureText="Ctrl+N" Template="{StaticResource iconMenuItem}" Icon="{StaticResource newFileIcon}" />
                <MenuItem Header="_Open..." Command="{Binding OpenFileCommand}" InputGestureText="Ctrl+O" Template="{StaticResource iconMenuItem}" Icon="{StaticResource openFileIcon}" />
                <MenuItem Header="_Browse..." Click="OpenBrowseWindow_Click" />
                <MenuItem Header="_Save" Command="{Binding SaveCommand}" InputGestureText="Ctrl+S" Template="{StaticResource iconMenuItem}" Icon="{StaticResource saveIcon}" />
                <MenuItem Header="_Save as..." Command="{Binding SaveAsCommand}" InputGestureText="Ctrl+Alt+S" />
                <MenuItem Header="E_xport to game..." Command="{Binding CurrentItemCommand}" CommandParameter="export" InputGestureText="Ctrl+Alt+Shift+S" />
                <MenuItem Header="Export as _bitmap image..." Command="{Binding CurrentItemCommand}" CommandParameter="exportBitmap" Template="{StaticResource iconMenuItem}" Icon="{StaticResource pictureIcon}" />
                <Separator />
                <MenuItem Header="_Recent files" ItemsSource="{Binding RecentFiles}">
                    <MenuItem.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" />
                        </DataTemplate>
                    </MenuItem.ItemTemplate>
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Command" Value="{Binding DataContext.OpenFileCommand, ElementName=mainWindow}"/>
                            <Setter Property="CommandParameter" Value="{Binding}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator />
                <MenuItem Header="_Exit" Command="{Binding ExitCommand}" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Undo" Command="{Binding Undo.UndoCommand}" InputGestureText="Ctrl+Z / F3" Template="{StaticResource iconMenuItem}" Icon="{StaticResource undoIcon}" />
                <MenuItem Header="_Redo" Command="{Binding Undo.RedoCommand}" InputGestureText="Ctrl+Y / F4" Template="{StaticResource iconMenuItem}" Icon="{StaticResource redoIcon}" />
                <Separator />
                <MenuItem Header="_Copy" Command="{Binding ClipboardCommand}" CommandParameter="copy" InputGestureText="Ctrl+C" Template="{StaticResource iconMenuItem}" Icon="{StaticResource copyIcon}" />
                <MenuItem Header="_Paste" Command="{Binding ClipboardCommand}" CommandParameter="paste" InputGestureText="Ctrl+V" Template="{StaticResource iconMenuItem}" Icon="{StaticResource pasteIcon}" />
                <Separator />
                <MenuItem Header="_Add new symbol" Command="{Binding CurrentItemCommand}" CommandParameter="addLayer" InputGestureText="Ctrl+E" Template="{StaticResource iconMenuItem}" Icon="{StaticResource addIcon}" />
                <MenuItem Header="Add new _group" Command="{Binding CurrentItemCommand}" CommandParameter="addGroup" InputGestureText="Ctrl+Shift+E" Template="{StaticResource iconMenuItem}" Icon="{StaticResource newFolderIcon}" />
                <MenuItem Header="Add new _overlay image" Command="{Binding AddImageLayerCommand}" Template="{StaticResource iconMenuItem}" Icon="{StaticResource pictureIcon}" />
                <MenuItem Header="Clear _selection" Command="{Binding CurrentItemCommand}" CommandParameter="deselect" InputGestureText="Ctrl+D" />
                <Separator />
                <MenuItem Header="_Move item up in drawing order" Command="{Binding CurrentItemCommand}" CommandParameter="moveUp" InputGestureText="Alt+Up" Template="{StaticResource iconMenuItem}" Icon="{StaticResource upIcon}" />
                <MenuItem Header="Move item _down in drawing order" Command="{Binding CurrentItemCommand}" CommandParameter="moveDown" InputGestureText="Alt+Down" Template="{StaticResource iconMenuItem}" Icon="{StaticResource downIcon}" />
                <Separator />
                <MenuItem Header="Ad_vanced">
                    <MenuItem Header="_Clean up symbols outside visible area" Command="{Binding CurrentItemCommand}" CommandParameter="cleanupBounds" />
                    <MenuItem Header="_Group symbols by color" Command="{Binding CurrentItemCommand}" CommandParameter="groupByColor" />
                </MenuItem>
                <Separator />
                <MenuItem Header="Toggle item _visibility" Command="{Binding CurrentItemCommand}" CommandParameter="toggleVisibility" InputGestureText="Ctrl+," Template="{StaticResource iconMenuItem}" Icon="{StaticResource viewIcon}" />
                <MenuItem Header="Dupli_cate item" Command="{Binding CurrentItemCommand}" CommandParameter="duplicate" InputGestureText="Ctrl+Shift+D" Template="{StaticResource iconMenuItem}" Icon="{StaticResource copyIcon}" />
                <MenuItem Header="_Delete item" Command="{Binding CurrentItemCommand}" CommandParameter="delete" InputGestureText="Shift+Del" Template="{StaticResource iconMenuItem}" Icon="{StaticResource deleteIcon}" />
            </MenuItem>
            <MenuItem Header="_Transform item">
                <MenuItem Header="Flip _horizontally" Command="{Binding CurrentItemCommand}" CommandParameter="flipX" InputGestureText="Ctrl+F" Template="{StaticResource iconMenuItem}" Icon="{StaticResource flipXIcon}" />
                <MenuItem Header="Flip _vertically" Command="{Binding CurrentItemCommand}" CommandParameter="flipY" InputGestureText="Ctrl+Shift+F" Template="{StaticResource iconMenuItem}" Icon="{StaticResource flipYIcon}" />
                <Separator />
                <MenuItem Header="_Rotate 90 degrees" InputGestureText="Ctrl+R" Command="{Binding RotateCurrentItemCommand}" CommandParameter="90" Template="{StaticResource iconMenuItem}" Icon="{StaticResource rotateIcon}" />
                <MenuItem Header="Rotate 90 degrees _counter-clockwise" InputGestureText="Ctrl+Shift+R" Command="{Binding RotateCurrentItemCommand}" CommandParameter="-90" Template="{StaticResource mirroredIconMenuItem}" Icon="{StaticResource rotateIcon}" />
                <MenuItem Header="R_otate 180 degrees" Command="{Binding RotateCurrentItemCommand}" CommandParameter="180" />
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="_Zoom in" InputGestureText="Ctrl++" Command="{Binding ZoomCommand}" CommandParameter="in" Template="{StaticResource iconMenuItem}" Icon="{StaticResource zoomInIcon}" />
                <MenuItem Header="Zoom _out" InputGestureText="Ctrl+-" Command="{Binding ZoomCommand}" CommandParameter="out" Template="{StaticResource iconMenuItem}" Icon="{StaticResource zoomOutIcon}" />
                <MenuItem Header="_Reset zoom" Command="{Binding ZoomCommand}" />
                <Separator />
                <MenuItem Header="Use game _tone curve" InputGestureText="Ctrl+Shift+T" IsCheckable="True" IsChecked="{Binding ApplyToneCurve}" />
                <MenuItem Header="Show _guide lines" InputGestureText="Ctrl+Shift+G" IsCheckable="True" IsChecked="{Binding GuideLinesEnabled}" />
                <MenuItem Header="Show _image overlays" InputGestureText="Ctrl+Space" IsCheckable="True" IsChecked="{Binding ShowImageOverlays}" />
                <MenuItem Header="Use _natural symbol selection" IsCheckable="True" IsChecked="{Binding NaturalSymbolSelectionEnabled}" />
                <Separator />
                <MenuItem Header="_Testing">
                    <MenuItem Header="Disable _grid rounding" IsCheckable="True" IsChecked="{Binding ElementName=renderer, Path=DisableGridPositioning}" />
                </MenuItem>
                <Separator />
                <MenuItem Header="Show example of in-game appearance" Click="ToggleExampleWindow_MenuItem_Click" InputGestureText="F10" />
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="Show _help..." InputGestureText="F1" Command="{Binding HelpCommand}" Template="{StaticResource iconMenuItem}" Icon="{StaticResource helpIcon}" />
            </MenuItem>
        </Menu>


        <DockPanel Grid.Row="1" Background="{x:Static SystemColors.ControlBrush}">
            <!-- Info bar below tree view -->
            <StatusBar DockPanel.Dock="Bottom" Padding="3">
                <TextBlock Style="{StaticResource iconText}" Text="{StaticResource layersIcon}" />
                <TextBlock>
                    <Run Text="{Binding CurrentSymbolArt.LayerCount, Mode=OneWay}" />/225 symbols
                </TextBlock>
            </StatusBar>

            <!-- Tree view of groups/layers in current symbol art -->
            <TabControl SelectedIndex="{Binding TabIndex}">
                <TabItem Header="Symbol tree">
                    <TreeView
                        x:Name="treeView"
                        BorderThickness="0"
                        ItemsSource="{Binding CurrentSymbolArt.RootItems}"
                        AllowDrop="True"
                        DragEnter="TreeView_DragEnter"
                        Drop="TreeView_Drop"
                        PreviewMouseMove="TreeView_PreviewMouseMove"
                        PreviewMouseDown="treeView_MouseDown"
                        >
                        <i:Interaction.Behaviors>
                            <behaviors:TreeViewSelectionBehavior ExpandSelected="True" HierarchyPredicate="{Binding HierarchyPredicate}" SelectedItem="{Binding SelectedItem}" />
                        </i:Interaction.Behaviors>
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type models:SymbolArtLayerModel}" ItemsSource="{Binding Children}">
                                <DockPanel>
                                    <CheckBox IsChecked="{Binding Visible}" IsTabStop="False" />
                                    <Rectangle Height="13" Width="13" Margin="3 0 0 0">
                                        <Rectangle.Style>
                                            <Style TargetType="Rectangle">
                                                <Setter Property="Fill" Value="{Binding Color, Converter={StaticResource colorSolidBrushConverter}}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=mainWindow, Path=DataContext.ApplyToneCurve}" Value="True">
                                                        <Setter Property="Fill" Value="{Binding Color, Converter={StaticResource colorToneSolidBrushConverter}}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <TextBlock Margin="5 0" Text="{Binding DisplayName}" />
                                    <TextBlock Margin="5 0" Text="{Binding Symbol.Name}" FontStyle="Italic" />
                                    <DockPanel.Style>
                                        <Style TargetType="DockPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Visible}" Value="False">
                                                    <Setter Property="Opacity" Value="0.5" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DockPanel.Style>
                                </DockPanel>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type models:SymbolArtGroupModel}" ItemsSource="{Binding Children}">
                                <DockPanel>
                                    <CheckBox IsChecked="{Binding Visible}" IsTabStop="False" />
                                    <TextBlock Margin="5 0" Text="{Binding DisplayName}" />
                                </DockPanel>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type models:SymbolArtModel}" ItemsSource="{Binding Children}">
                                <DockPanel>
                                    <CheckBox IsChecked="{Binding Visible}" IsTabStop="False" />
                                    <TextBlock Margin="5 0" Text="{Binding DisplayName}" />
                                </DockPanel>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type models:SymbolArtImageLayerModel}" ItemsSource="{Binding Children}">
                                <DockPanel>
                                    <CheckBox IsChecked="{Binding Visible}" IsTabStop="False" />
                                    <TextBlock Margin="5 0" FontStyle="Italic" FontWeight="Bold" Text="{Binding DisplayName}" />
                                </DockPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                </TabItem>

                <TabItem Header="Palette">
                    <DockPanel>
                        <colorpicker:StandardColorPicker DockPanel.Dock="Bottom" ShowAlpha="False">
                            <colorpicker:StandardColorPicker.Style>
                                <Style TargetType="{x:Type colorpicker:StandardColorPicker}">
                                    <Setter Property="SelectedColor" Value="{Binding SelectedItem.Color, ElementName=paletteList, Mode=TwoWay}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=mainWindow, Path=DataContext.ApplyToneCurve}" Value="True">
                                            <Setter Property="SelectedColor" Value="{Binding SelectedItem.Color, ElementName=paletteList, Mode=TwoWay, Converter={StaticResource colorConversionConverter}}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </colorpicker:StandardColorPicker.Style>
                        </colorpicker:StandardColorPicker>
                        <ListBox ItemsSource="{Binding CurrentSymbolArt.Palette.Colors}" x:Name="paletteList">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Height="48" Width="48">
                                            <Rectangle.Style>
                                                <Style TargetType="Rectangle">
                                                    <Setter Property="Fill" Value="{Binding Color, Converter={StaticResource colorSolidBrushConverter}}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=mainWindow, Path=DataContext.ApplyToneCurve}" Value="True">
                                                            <Setter Property="Fill" Value="{Binding Color, Converter={StaticResource colorToneSolidBrushConverter}}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Rectangle.Style>
                                        </Rectangle>
                                        <TextBlock VerticalAlignment="Center" Margin="10 0 0 0">
                                        Used by <Run Text="{Binding Layers.Count, Mode=OneWay}" /> symbol(s)
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </TabItem>
            </TabControl>
        </DockPanel>

        <!-- Splitter between layer tree and renderer -->
        <GridSplitter Grid.Row="1" Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />

        <!-- Grid background for symbol art renderer -->
        <Rectangle Grid.Row="1" Grid.Column="2">
            <Rectangle.Fill>
                <DrawingBrush TileMode="Tile" Viewport="0,0,32,32" ViewportUnits="Absolute">
                    <DrawingBrush.Drawing>
                        <GeometryDrawing Geometry="M0,0 H1 V1 H2 V2 H1 V1 H0Z" Brush="#ddd"/>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Rectangle.Fill>
        </Rectangle>

        <!-- Splitter between layer tree and current item options panel -->
        <GridSplitter Grid.Row="1" Grid.Column="3" Width="5" HorizontalAlignment="Stretch" />

        <!-- Panel for editing current item (file, group, layer) -->
        <DockPanel Grid.Row="1" Grid.Column="4">
            <ContentControl DockPanel.Dock="Top" Grid.Row="1" Grid.Column="4" Content="{Binding SelectedItem}" />
            <colorpicker:StandardColorPicker 
                DockPanel.Dock="Top" 
                ShowAlpha="False"
                Visibility="{Binding DataContext.SelectedItemIsLayer, ElementName=mainWindow, Converter={StaticResource booleanToVisibilityConverter}}"
                Width="96">
                <colorpicker:StandardColorPicker.Style>
                    <Style TargetType="{x:Type colorpicker:StandardColorPicker}">
                        <Setter Property="SelectedColor" Value="{Binding SelectedItem.Color, Mode=TwoWay}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=mainWindow, Path=DataContext.ApplyToneCurve}" Value="True">
                                <Setter Property="SelectedColor" Value="{Binding SelectedItem.Color, Mode=TwoWay, Converter={StaticResource colorConversionConverter}}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </colorpicker:StandardColorPicker.Style>
            </colorpicker:StandardColorPicker>

            <DockPanel DockPanel.Dock="Top" Margin="5 0">
                <TextBlock DockPanel.Dock="Left" Text="Opacity" />
                <Slider Minimum="0" Maximum="7" Value="{Binding SelectedItem.Alpha, Converter={StaticResource alphaConverter}}" DockPanel.Dock="Top" Margin="5 0 0 0" TickFrequency="1" TickPlacement="BottomRight" IsSnapToTickEnabled="True" />
            </DockPanel>
            <views:SymbolSelector
                DataContext="{Binding SymbolsList}"
                SelectedSymbol="{Binding DataContext.SelectedItem.Symbol, ElementName=mainWindow, Mode=TwoWay}"
                Visibility="{Binding DataContext.SelectedItemIsLayer, ElementName=mainWindow, Converter={StaticResource booleanToVisibilityConverter}}">
            </views:SymbolSelector>
        </DockPanel>

        <!-- Help -->
        <Border Grid.Row="1" Grid.ColumnSpan="5" Panel.ZIndex="3" Margin="50" HorizontalAlignment="Center" VerticalAlignment="Center" MaxWidth="1000"
                Visibility="{Binding ShowHelpScreen, Converter={StaticResource booleanToVisibilityConverter}}"
                BorderBrush="Blue" BorderThickness="1">
            <Border.Background>
                <SolidColorBrush Color="White" Opacity="0.95" />
            </Border.Background>
            <DockPanel>
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" Margin="5">
                    <Button Content="Close help" Padding="5" Command="{Binding HelpCommand}"/>
                </StackPanel>
                <ScrollViewer>
                    <views:HelpView Margin="15" />
                </ScrollViewer>
            </DockPanel>
        </Border>

        <DockPanel Grid.Row="1" Grid.Column="2">
            <!-- Status bar with info/config for renderer -->
            <StatusBar DockPanel.Dock="Bottom" Padding="3">
                <TextBlock Style="{StaticResource iconText}" Text="{StaticResource gridIcon}" />
                <TextBlock Text="{Binding MouseSymbolPosition, ElementName=renderer}" MinWidth="45" />
                <Separator />
                <TextBlock>
                    Hold shift to select. Ctrl+click to rotate. Alt+click to resize. Click and drag vertex to edit. Right-click and drag to move canvas. Ctrl+Alt and drag to duplicate.
                </TextBlock>
                <StatusBarItem HorizontalAlignment="Right">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock TextAlignment="Center">
                            <Run Text="{Binding ZoomPercentage, Mode=OneWay, StringFormat=N0}" />%
                        </TextBlock>
                        <Button Style="{StaticResource statusBarIconButton}" Content="{StaticResource zoomOutIcon}" ToolTip="Zoom out" Command="{Binding ZoomCommand}" CommandParameter="out" Margin="5 0" />
                        <Slider HorizontalAlignment="Right" Width="150" Value="{Binding DisplaySymbolUnitWidth, Converter={StaticResource symbolUnitWidthZoomConverter}}" Minimum="0" Maximum="1" TickFrequency="0.5" IsMoveToPointEnabled="True" />
                        <Button Style="{StaticResource statusBarIconButton}" Content="{StaticResource zoomInIcon}" ToolTip="Zoom in" Command="{Binding ZoomCommand}" CommandParameter="in" Margin="5 0 0 0" />
                    </StackPanel>
                </StatusBarItem>
            </StatusBar>
            <Grid>
                <!-- Upper icon toolbar -->
                <ToolBarTray Background="Transparent" Panel.ZIndex="2" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <ToolBar Padding="2" FontSize="24">
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource addIcon}" ToolTip="Adds a new symbol to the current group (Ctrl+E)" Command="{Binding CurrentItemCommand}" CommandParameter="addLayer" />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource newFolderIcon}" ToolTip="Adds a new group (Ctrl+Shift+E)" Command="{Binding CurrentItemCommand}" CommandParameter="addGroup" />
                        <Separator />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource viewIcon}" ToolTip="Toggle the visibility of the current symbol or group (Ctrl+,)" Command="{Binding CurrentItemCommand}" CommandParameter="toggleVisibility" />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource flipXIcon}" ToolTip="Horizontally flips the current symbol or group (Ctrl+F)" Command="{Binding CurrentItemCommand}" CommandParameter="flipX" />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource flipYIcon}" ToolTip="Vertically flips the current symbol or group (Ctrl+Shift+F)" Command="{Binding CurrentItemCommand}" CommandParameter="flipY" />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource rotateIcon}" ToolTip="Rotate the current symbol or group clockwise by 90 degrees (Ctrl+R)" Command="{Binding RotateCurrentItemCommand}" CommandParameter="90" />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource copyIcon}" ToolTip="Duplicates the current symbol or group (Ctrl+Shift+D)" Command="{Binding CurrentItemCommand}" CommandParameter="duplicate" />
                        <ToggleButton IsChecked="{Binding ColorPickerEnabled}" FontFamily="Segoe MDL2 Assets" Content="{StaticResource colorIcon}" Foreground="Blue" ToolTip="Engages/disengages color picker mode" Command="{Binding CanvasModeCommand}" CommandParameter="colorPicker" />
                        <Separator />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource upIcon}" ToolTip="Moves the current symbol or group up in the drawing order (Alt+Up)" Command="{Binding CurrentItemCommand}" CommandParameter="moveUp" />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource downIcon}" ToolTip="Moves the current symbol or group down in the drawing order (Alt+Up)" Command="{Binding CurrentItemCommand}" CommandParameter="moveDown" />
                        <Separator />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource undoIcon}" ToolTip="Undo the last action (Ctrl+Z / F3)" Command="{Binding Undo.UndoCommand}" />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource redoIcon}" ToolTip="Redo the last action (Ctrl+Y / F4)" Command="{Binding Undo.RedoCommand}" />
                        <Separator />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource deleteIcon}" Foreground="#cc0000" ToolTip="Delete the current symbol or group (Shift+Del)" Command="{Binding CurrentItemCommand}" CommandParameter="delete" />
                    </ToolBar>
                </ToolBarTray>

                <!-- History / undo panel and list -->
                <Expander
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="White"
                    Panel.ZIndex="2"
                    BorderThickness="1"
                    BorderBrush="{x:Static SystemColors.ActiveBorderBrush}"
                    MinWidth="150"
                    Margin="2">
                    <Expander.Header>
                        <TextBlock Margin="18 0" FontWeight="Bold">History / undo</TextBlock>
                    </Expander.Header>
                    <StackPanel>
                        <controls:ListBoxScroll ItemsSource="{Binding Undo.UndoActions}" SelectedItem="{Binding Undo.CurrentAction}" MinWidth="150" MaxHeight="200" BorderThickness="0">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsPerformed}" Value="False">
                                                        <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </controls:ListBoxScroll>
                    </StackPanel>
                </Expander>


                <!-- Symbol art renderer -->
                <views:SymbolArtRenderer 
                    x:Name="renderer"
                    ClipToBounds="True"
                    Grid.Row="1"
                    Grid.Column="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    ViewPosition="{Binding ViewPosition, Mode=TwoWay}"
                    SymbolArt="{Binding CurrentSymbolArt}"
                    SymbolUnitWidth="{Binding DisplaySymbolUnitWidth, Mode=TwoWay}"
                    SelectedLayer="{Binding SelectedItem, Mode=TwoWay}"
                    ApplyToneCurve="{Binding ApplyToneCurve}"
                    ShowGuides="{Binding GuideLinesEnabled}"
                    ShowImageOverlayLayers="{Binding ShowImageOverlays}"
                    CanvasEditMode="{Binding CanvasEditMode}"
                    DisplaySettingFlags="{Binding DisplaySettingFlags}"
                    >
                </views:SymbolArtRenderer>
            </Grid>
        </DockPanel>
    </Grid>
</Window>
