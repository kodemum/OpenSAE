<UserControl x:Class="OpenSAE.Views.SymbolArtRenderer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:models="clr-namespace:OpenSAE.Models"
             xmlns:converters="clr-namespace:OpenSAE.Converters" xmlns:controls="clr-namespace:OpenSAE.Controls"
             mc:Ignorable="d" 
             x:Name="renderer"
             Focusable="True"
             IsTabStop="True"
             Loaded="renderer_Loaded"
             d:DesignHeight="550" d:DesignWidth="800">
    <UserControl.Resources>
        <DiffuseMaterial x:Key="borderMaterial">
            <DiffuseMaterial.Brush>
                <SolidColorBrush Color="Black" />
            </DiffuseMaterial.Brush>
        </DiffuseMaterial>
        <converters:MultiplyNumberConverter x:Key="symbolArtScaleConverter" />
        <converters:LayerPointCollectionConverter x:Key="layerPointConverter" />
        <converters:Point3DConverter x:Key="point3dConverter" Z="1" />
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <Style TargetType="Ellipse" x:Key="vertexCornerCircle">
            <Setter Property="Height" Value="10" />
            <Setter Property="Width" Value="10" />
            <Setter Property="Fill" Value="Black" />
            <Setter Property="Opacity" Value="0.8" />
            <Setter Property="Canvas.Top" Value="{Binding Y}" />
            <Setter Property="Canvas.Left" Value="{Binding X}" />
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform X="-5" Y="-5" />
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.Background>
            <SolidColorBrush Color="Black" Opacity="0" />
        </Grid.Background>
        <!--<StackPanel HorizontalAlignment="Right" Panel.ZIndex="30">
            <TextBlock>Debug</TextBlock>
            <TextBlock Text="{Binding ElementName=renderer, Path=ActualWidth}" />
            <TextBlock Text="{Binding ElementName=renderer, Path=SymbolUnitWidth, StringFormat=N2}" />
            <TextBlock Text="{Binding ElementName=renderer, Path=SymbolScaleFactor, StringFormat=N2}" />
            <TextBlock>
                <Run Text="{Binding ElementName=renderer, Path=ViewPosition.X, StringFormat=N2}" />, <Run Text="{Binding ElementName=renderer, Path=ViewPosition.Y, StringFormat=N2}" />
            </TextBlock>
        </StackPanel>-->
        <Viewport3D x:Name="viewport3d">
            <ModelVisual3D>
                <ModelVisual3D.Content>
                    <!-- Group to which the symbol art layers are added-->
                    <Model3DGroup x:Name="symbolArtContentGroup" />
                </ModelVisual3D.Content>
            </ModelVisual3D>

            <Viewport3D.Camera>
                <!-- 
                The camera is wider than the typical symbol art (192 units) 
                since it is nice to have a view of what is outside the active area
                -->
                <OrthographicCamera 
                    LookDirection="0 0 -1"
                    UpDirection="0 1 0"
                    Position="{Binding ElementName=renderer, Path=ViewPosition, Converter={StaticResource point3dConverter}}"
                    Width="{Binding ElementName=renderer, Path=SymbolUnitWidth}"
                    >
                </OrthographicCamera>
            </Viewport3D.Camera>
        </Viewport3D>

        <!-- Border framing active area of symbol art -->
        <controls:CoordinateCanvas CoordinateWidth="{Binding ElementName=renderer, Path=SymbolArt.Width}" 
                                   Offset="{Binding ElementName=renderer, Path=ViewPosition}"
                                   VerticalAlignment="Center" HorizontalAlignment="Center">
            <controls:CoordinateCanvas.Height>
                <MultiBinding Converter="{StaticResource symbolArtScaleConverter}">
                    <Binding Path="SymbolScaleFactor" ElementName="renderer" />
                    <Binding Path="SymbolArt.Height" ElementName="renderer" />
                </MultiBinding>
            </controls:CoordinateCanvas.Height>
            <controls:CoordinateCanvas.Width>
                <MultiBinding Converter="{StaticResource symbolArtScaleConverter}">
                    <Binding Path="SymbolScaleFactor" ElementName="renderer" />
                    <Binding Path="SymbolArt.Width" ElementName="renderer" />
                </MultiBinding>
            </controls:CoordinateCanvas.Width>
            <Border BorderThickness="1" BorderBrush="Black" Opacity="0.7" ClipToBounds="False">
                <Border.Width>
                    <MultiBinding Converter="{StaticResource symbolArtScaleConverter}">
                        <Binding Path="SymbolScaleFactor" ElementName="renderer" />
                        <Binding Path="SymbolArt.Width" ElementName="renderer" />
                    </MultiBinding>
                </Border.Width>
                <Border.Height>
                    <MultiBinding Converter="{StaticResource symbolArtScaleConverter}">
                        <Binding Path="SymbolScaleFactor" ElementName="renderer" />
                        <Binding Path="SymbolArt.Height" ElementName="renderer" />
                    </MultiBinding>
                </Border.Height>
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=renderer, Path=SymbolArt}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=renderer, Path=ShowBoundingBox}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>

            <!-- Border framing the largest possible coordinates for symbol art vertices -->
            <Border BorderThickness="1" BorderBrush="Black" Opacity="0.7" ClipToBounds="False" controls:CoordinateCanvas.Center="True"
                    Visibility="{Binding ElementName=renderer, Path=ShowGuides, Converter={StaticResource booleanToVisibilityConverter}}">
                <Border.Width>
                    <MultiBinding Converter="{StaticResource symbolArtScaleConverter}">
                        <Binding Path="SymbolScaleFactor" ElementName="renderer" />
                        <Binding Source="256" />
                    </MultiBinding>
                </Border.Width>
                <Border.Height>
                    <MultiBinding Converter="{StaticResource symbolArtScaleConverter}">
                        <Binding Path="SymbolScaleFactor" ElementName="renderer" />
                        <Binding Source="256" />
                    </MultiBinding>
                </Border.Height>
            </Border>

            <!-- Center guides -->
            <Rectangle Width="0.5" Height="5000" Fill="Black" Opacity="0.7" controls:CoordinateCanvas.Center="True" Visibility="{Binding ElementName=renderer, Path=ShowGuides, Converter={StaticResource booleanToVisibilityConverter}}" />
            <Rectangle Height="0.5" Width="5000" Fill="Black" Opacity="0.7" controls:CoordinateCanvas.Center="True" Visibility="{Binding ElementName=renderer, Path=ShowGuides, Converter={StaticResource booleanToVisibilityConverter}}" />
        </controls:CoordinateCanvas>

        <ContentPresenter Content="{Binding ElementName=renderer, Path=SelectedLayer}">
            <ContentPresenter.ContentTemplate>
                <DataTemplate>
                    <!-- CoordinateCanvas converts symbol art coordinates to screen coordinates for Canvas.Top and Canvas.Left -->
                    <controls:CoordinateCanvas 
                        CoordinateWidth="{Binding ElementName=renderer, Path=SymbolUnitWidth}"
                        VerticalAlignment="Center"
                        CenterOrigin="True"
                        Offset="{Binding ElementName=renderer, Path=ViewPosition}">
                        <controls:CoordinateCanvas.Height>
                            <MultiBinding Converter="{StaticResource symbolArtScaleConverter}">
                                <Binding Path="SymbolScaleFactor" ElementName="renderer" />
                                <Binding Path="SymbolArt.Height" ElementName="renderer" />
                            </MultiBinding>
                        </controls:CoordinateCanvas.Height>

                        <!-- Highlight vertices of the current layer, if there is one -->
                        <Polyline StrokeThickness="1" Stroke="Black" x:Name="layerVertices">
                            <Polyline.Points>
                                <MultiBinding Converter="{StaticResource layerPointConverter}">
                                    <Binding Path="SymbolScaleFactor" ElementName="renderer" />
                                    <Binding Path="Vertices" />
                                </MultiBinding>
                            </Polyline.Points>
                        </Polyline>
                        <Polyline Points="{Binding Points, ElementName=layerVertices}" StrokeThickness="1" Stroke="White" StrokeDashArray="2 0 2" />
                        
                        <!-- Circles on each vertex -->
                        <Ellipse Fill="#FF0C00" Style="{StaticResource vertexCornerCircle}" DataContext="{Binding Vertices[0]}" />
                        <Ellipse Fill="#00FFFC" Style="{StaticResource vertexCornerCircle}" DataContext="{Binding Vertices[1]}" />
                        <Ellipse Fill="#00FF05" Style="{StaticResource vertexCornerCircle}" DataContext="{Binding Vertices[2]}" />
                        <Ellipse Fill="#6500FF" Style="{StaticResource vertexCornerCircle}" DataContext="{Binding Vertices[3]}" />
                    </controls:CoordinateCanvas>
                </DataTemplate>
            </ContentPresenter.ContentTemplate>
            <ContentPresenter.Style>
                <Style TargetType="ContentPresenter">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=renderer, Path=SelectedLayer}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentPresenter.Style>
        </ContentPresenter>
    </Grid>
</UserControl>
